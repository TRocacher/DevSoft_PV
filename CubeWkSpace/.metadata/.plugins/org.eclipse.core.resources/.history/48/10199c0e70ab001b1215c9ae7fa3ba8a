/*
 * MyAnalog.h
 *
 *  Created on: 15 Avril. 2021
 *      Author: Thierry Rocacher
 *
 *  ======= CONTEXTE DU LOGICIEL ===================
 *  CIBLE : stm32L476RG (Nucléo board)
 *  IDE : Cube IDE vers 1.5.1
 *  CONTEXTE : gestion soft système PV
 *  DEPENDENCES :
 *
 *
 *  ======= GENERALITE  ===================
 *  Le Module menu.c utilise le module StringFct.h et

 *
 *
 */




#ifndef MENU_H_
#define MENU_H_

#include "StringFct.h"
#include "ComUART.h"
#include "stm32l4xx_hal.h"


typedef struct
{
	float Val;
	float MinVal;
	float MaxVal;
	char DigitNb;
	char DecimalNb;
	char NewUserInputFlag;
} Menu_ParamValTypedef;




typedef struct Menu_Node Menu_Node;
struct Menu_Node {
	Menu_Node *  NextNode;
	Menu_Node *  PreviousNode;
	Menu_Node *  UpNode;
	Menu_Node *  DownNode;
	char * Title;
	char MenuPosition;
	char * ItemToPrint;
	void (*NodeExecFct)(void);
	Menu_ParamValTypedef * Param;
};

extern Menu_Node MenuNodePassive_1, MenuNodePassive_2, MenuNodePassive_3, Item_Menu4;
extern Menu_Node MenuNodePassive_1_1,MenuNodePassive_1_2;
extern Menu_Node MenuNodePassive_2_1;
extern Menu_Node MenuNodePassive_3_1,MenuNodePassive_3_2,MenuNodePassive_3_3,MenuNodePassive_3_4,MenuNodePassive_3_5,MenuNodePassive_3_6,MenuNodePassive_3_7;
extern Menu_Node MenuNodeInput_VoltParam;

extern Menu_Node MenuNodeInput_10;
extern Menu_Node MenuNodeInput_20, MenuNodeInput_21;
extern Menu_Node MenuNodeInput_30,MenuNodeInput_31,MenuNodeInput_32;


extern Menu_Node MenuNodePassive_4_0,MenuNodePassive_4_1,MenuNodePassive_4_2,MenuNodePassive_4_3;
extern Menu_Node MenuNodeInput_40,MenuNodeInput_41,MenuNodeInput_42,MenuNodeInput_43;

extern Menu_Node MenuNodePassive_5_0,MenuNodePassive_5_1,MenuNodePassive_5_2,MenuNodePassive_5_3;
extern Menu_Node MenuNodeInput_50,MenuNodeInput_51,MenuNodeInput_52,MenuNodeInput_53;

extern Menu_Node MenuNodePassive_6_0,MenuNodePassive_6_1,MenuNodePassive_6_2,MenuNodePassive_6_3;
extern Menu_Node MenuNodeInput_60,MenuNodeInput_61,MenuNodeInput_62,MenuNodeInput_63;



/**
  * @brief  Initialise le module Menu
  * @param  UsedUSART = le handle de l'usart au sens de Hal
  * @retval None
  * Exempe :Menu_Init(&huart2);
  **/
void Menu_Init(UART_HandleTypeDef * UsedUSART);





#endif
